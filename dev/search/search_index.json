{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TDBP","text":"<p>\ud83d\udcca A warren plugin for moodle learning analytics dashboard</p> <p> </p>"},{"location":"#tdbp_tableaux_de_bord_pedagogiques","title":"TDBP (Tableaux De Bord P\u00e9dagogiques)","text":""},{"location":"LICENSE/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023-present,     France Universit\u00e9 Num\u00e9rique,     APUI Avignon University.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/","title":"API","text":""},{"location":"api/#fastapi_010","title":"FastAPI 0.1.0","text":""},{"location":"api/#servers","title":"Servers","text":"Description URL /api/v1 /api/v1"},{"location":"api/#endpoints","title":"Endpoints","text":""},{"location":"api/#get_tdbpwindow","title":"GET /tdbp/window","text":"<p>Get Sliding Window</p> Description <p>Return course sliding window indicator.</p> <p>Args:     course_id (str): The course identifier on Moodle.     until (date): End date until when to compute the sliding window.</p> <p>Returns:     Json: Computed information about the sliding window.         - window (DateRange): Timeframe of the sliding window         - active actions (List[Action]): list of computed active actions.         - dynamic cohort (List[str]): list of student IDs who were active during             the sliding window.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>course_id</code> query string No The course identifier on Moodle <code>until</code> query string No End date until when to compute the sliding window <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Entity </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"api/#get_tdbpcohort","title":"GET /tdbp/cohort","text":"<p>Get Cohort</p> Description <p>Return course (static) cohort information.</p> <p>Args:     course_id (str): The course identifier on Moodle.     until (date): End date until when to compute the sliding window.</p> <p>Returns:     Json: Lists of completed active actions per student.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>course_id</code> query string No The course identifier on Moodle <code>until</code> query string No End date until when to compute the sliding window <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Entity </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"api/#get_tdbpscores","title":"GET /tdbp/scores","text":"<p>Get Scores</p> Description <p>Return student or cohort scores on active actions.</p> <p>Args:     course_id (str): The course identifier on Moodle.     until (datetime): End date until when to compute the sliding window.     student_id (str): The student identifier on Moodle.     totals (bool): Flag to activate cohort totals scores computing on active         actions.     average (bool): Flag to activate cohort average scores for computing on active         actions.</p> <p>Returns:     Json: Active actions scores per student.         - actions (list): Active actions IRIs (used as response index).         - scores (dict): Lists of active actions scores per student.         - totals (list): Sum of students\u2019 scores per active action.         - average (list): Average students\u2019 score per active action.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>average</code> query boolean False No Flag to activate to compute average scores <code>course_id</code> query string No The course identifier on Moodle <code>student_id</code> query string No The student identifier on Moodle <code>totals</code> query boolean False No Flag to activate to compute total scores <code>until</code> query string No End date until when to compute the sliding window <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Entity </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"api/#get_tdbpgrades","title":"GET /tdbp/grades","text":"<p>Get Grades</p> Description <p>Return average mark for graded active activities.</p> <p>Args:     course_id (str): The course identifier on Moodle.     until (datetime): End date until when to compute the sliding window.     student_id (str): The student identifier on Moodle.     average (bool): Flag to activate average grade computing on each graded active         activity.</p> <p>Returns:     Json: Active activities grades per student.         - actions (list): Active activities IRIs (used as response index).         - scores (dict): Lists of active activities grades per student.         - average (list): Average students\u2019 grades per active activity.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>average</code> query boolean False No Flag to activate to compute average grades <code>course_id</code> query string No The course identifier on Moodle <code>student_id</code> query string No The student identifier on Moodle <code>until</code> query string No End date until when to compute the sliding window <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Entity </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"api/#schemas","title":"Schemas","text":""},{"location":"api/#httpvalidationerror","title":"HTTPValidationError","text":"Name Type <code>detail</code> Array&lt;ValidationError&gt;"},{"location":"api/#validationerror","title":"ValidationError","text":"Name Type <code>loc</code> Array&lt;&gt; <code>msg</code> string <code>type</code> string"},{"location":"api/#security_schemes","title":"Security schemes","text":"Name Type Scheme Description OAuth2PasswordBearer oauth2"},{"location":"contribute/","title":"Contributing to Warren TdbP","text":"<p>Thank you for considering contributing to Warren TdbP plugin! We appreciate your interest and support. This documentation provides guidelines on how to contribute effectively to our project.</p>"},{"location":"contribute/#issues","title":"Issues","text":"<p>Issues are a valuable way to contribute to Warren TdbP. They can include bug reports, feature requests, and general questions or discussions. When creating or interacting with issues, please keep the following in mind:</p>"},{"location":"contribute/#1_search_for_existing_issues","title":"1. Search for existing issues","text":"<p>Before creating a new issue, search the existing issues to see if your concern has already been raised. If you find a related issue, you can add your input or follow the discussion. Feel free to engage in discussions, offer help, or provide feedback on existing issues. Your input is valuable in shaping the project\u2019s future.</p>"},{"location":"contribute/#2_creating_a_new_issue","title":"2. Creating a new issue","text":"<p>When opening an issue, provide as much information as possible when writing your issue. Your issue will be reviewed by a project maintainer and you may be offered to open a PR if you want to contribute to the code. If not, and if your issue is relevant, a contributor will apply the changes to the project. The issue will then be automatically closed when the PR is merged.</p> <p>Issues will be closed by project maintainers if they are deemed invalid. You can always reopen an issue if you believe it hasn\u2019t been adequately addressed.</p>"},{"location":"contribute/#3_code_of_conduct_in_discussion","title":"3. Code of conduct in discussion","text":"<ul> <li>Be respectful and considerate when participating in discussions.</li> <li>Avoid using offensive language, and maintain a positive and collaborative   tone.</li> <li>Stay on topic and avoid derailing discussions.</li> </ul>"},{"location":"contribute/#discussions","title":"Discussions","text":"<p>Discussions in the Warren TdbP repository are a place for open-ended conversations, questions, and general community interactions. Here\u2019s how to effectively use discussions:</p>"},{"location":"contribute/#1_creating_a_discussion","title":"1. Creating a discussion","text":"<ul> <li>Use a clear and concise title that summarizes the topic.</li> <li>In the description, provide context and details regarding the discussion.</li> <li>Use labels to categorize the discussion (e.g., \u201cquestion,\u201d \u201cgeneral   discussion,\u201d \u201cannouncements,\u201d etc.).</li> </ul>"},{"location":"contribute/#2_participating_in_discussions","title":"2. Participating in discussions","text":"<ul> <li>Engage in conversations respectfully, respecting others\u2019 opinions.</li> <li>Avoid spamming or making off-topic comments.</li> <li>Help answer questions when you can.</li> </ul>"},{"location":"contribute/#pull_requests_pr","title":"Pull Requests (PR)","text":"<p>Contributing to Warren through pull requests is a powerful way to advance the project. If you want to make changes or add new features, please follow these steps to submit a PR:</p>"},{"location":"contribute/#1_fork_the_repository","title":"1. Fork the repository","text":"<p>Begin by forking Warren TdbP project\u2019s repository.</p>"},{"location":"contribute/#2_clone_the_fork","title":"2. Clone the fork","text":"<p>Clone the forked repository to your local machine and change the directory to the project folder using the following commands (replace <code>&lt;your_fork&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;your_fork&gt;/warren-tdbp.git\ncd warren\n</code></pre>"},{"location":"contribute/#3_create_a_new_branch","title":"3. Create a new branch","text":"<p>Create a new branch for your changes, ideally with a descriptive name:</p> <pre><code>git checkout -b your-new-feature\n</code></pre>"},{"location":"contribute/#4_push_changes","title":"4. Push changes","text":"<p>Push your branch to your GitHub repository:</p> <pre><code>git push origin feature/your-new-feature\n</code></pre>"},{"location":"contribute/#5_create_a_pull_request","title":"5. Create a pull request","text":"<p>To initiate a Pull Request (PR), head to Warren TdbP project\u2019s GitHub repository and click on New Pull Request.</p> <p>Set your branch as the source and Warren project\u2019s <code>main</code> branch as the target.</p> <p>Provide a clear title for your PR and make use of the provided PR body template to document the changes made by your PR. This helps streamline the review process and maintain a well-documented project history.</p>"},{"location":"contribute/#7_review_and_discussion","title":"7. Review and discussion","text":"<p>Warren TdbP project maintainers will review your PR. Be prepared to make necessary changes or address any feedback. Patience during this process is appreciated.</p>"},{"location":"contribute/#8_merge","title":"8. Merge","text":"<p>Once your PR is approved, Warren maintainers will merge your changes into the main project. Congratulations, you\u2019ve successfully contributed to Warren TdbP! \ud83c\udf89</p>"},{"location":"contribute/#releases","title":"Releases","text":"<p>The Warren TdbP project has multiple services maintained in a single Git repository (aka a monorepo): each service has its own life cycle with its own releases.</p> <p>We use Git tags to trigger CI builds of the Warren TdbP\u2019s artifacts (PyPI/NPM packages and Docker images). To make a new release, depending on the service you are releasing, you need to apply the following Git tag pattern conventions:</p> Type Service Git tag pattern Example Back-end API <code>v[0-9]+.[0-9]+.[0-9]+-api</code> <code>v2.0.1-api</code> APP <code>v[0-9]+.[0-9]+.[0-9]+-app</code> <code>v1.3.6-app</code> Front-end core <code>v[0-9]+.[0-9]+.[0-9]+-ui</code> <code>v5.1.0-ui</code> Distribution * <code>v[0-9]+.[0-9]+.[0-9]+</code> <code>v2.0.0</code> Helm * <code>v[0-9]+.[0-9]+.[0-9]+-helm</code> <code>v1.2.1-helm</code> <p>About Warren TdbP distributions</p> <p>A Warren distribution is considered as a \u201cmeta\u201d package corresponding to a consistent combination of services releases that are known to work well together. This pattern will be used to tag Docker images and the documentation.</p>"}]}