#
# Warren TdBP package
#
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "warren-tdbp"
description = "A warren plugin for moodle learning analytics dashboard."
readme = "README.md"
authors = [
  { name="APUI (Avignon University)", email="amelie.soubrat@univ-avignon.fr" },
  { name="Open FUN (France Universite Numerique)", email="fun.dev@fun-mooc.fr" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",

]
requires-python = ">=3.8"
license = {file = "LICENSE.md"}
keywords = ["Analytics", "xAPI", "LRS", "LTI", "Moodle"]
dependencies = [
    "warren-api",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/apui-avignon-university/warren-tdbp"
"Bug Tracker" = "https://github.com/apui-avignon-university/warren-tdbp/issues"

[project.optional-dependencies]
dev = [
    "black==23.11.0",
    "build==1.0.3",
    "freezegun==1.3.1",
    "httpx==0.24.1",
    "ipdb==0.13.13",
    "ipython==8.18.1",
    "polyfactory==2.12.0",
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-httpx==0.22.0",
    "ruff==0.1.7",
    "mypy==1.7.1",
    "pandas-stubs==2.1.1.230928",
    "types-python-jose==3.3.4.8",
    "faker==21.0.0"
]
ci = [
    "twine==4.0.2",
]

[project.entry-points."warren.routers"]
tdbp = "warren_tdbp.api:router"

[project.entry-points."warren.indicators"]
window="warren_tdbp.indicators:SlidingWindowIndicator"
cohort="warren_tdbp.indicators:CohortIndicator"
scores="warren_tdbp.indicators:ScoresIndicator"
grades="warren_tdbp.indicators:GradesIndicator"

[tool.setuptools.dynamic]
version = { attr = "warren_tdbp.__version__" }

[tool.coverage.run]
omit = [
    "*/tests/*",
]

# Third party packages configuration
[tool.pytest.ini_options]
addopts = "-v --cov-config=plugins/tdbp/pyproject.toml --cov-report term-missing --cov=warren_tdbp"
python_files = [
    "test_*.py",
    "tests.py",
]
testpaths = [
    "tests",
]

[tool.ruff]
select = [
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # pycodestyle error
    "F",  # Pyflakes
    "I",  # Isort
    "ISC",  # flake8-implicit-str-concat
    "PLC",  # Pylint Convention
    "PLE",  # Pylint Error
    "PLR",  # Pylint Refactor
    "PLW",  # Pylint Warning
    "RUF100",  # Ruff unused-noqa
    "S",  # flake8-bandit
    "T20", # flake8-print
    "W",  # pycodestyle warning
]

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.per-file-ignores]
"**/tests/*" = [
    "S101",
    "PLR2004",  # Pylint magic-value-comparison
    "S311",
]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[tool.mypy]
plugins = "pydantic.mypy"
files = "./**/*.py"
exclude = ["/tests/"]

[[tool.mypy.overrides]]
module = [
    "rfc3987.*",
    "ralph.*",  # FIXME - remove when mypy is fixed on ralph
    "lti_toolbox.*",
    "warren.*"
]
ignore_missing_imports = true
